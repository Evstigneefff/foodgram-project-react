version: '3.3'
services:

  db:
    ports:
      - ${DB_PORT}:${DB_PORT}
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  backend:
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    build:
      context: ../backend/foodgram
      dockerfile: Dockerfile
       
    restart: always
    #command: "gunicorn foodgram.wsgi:application --bind 0.0.0.0:${BACKEND_PORT} --reload"
    command: python manage.py runserver 0.0.0.0:${BACKEND_PORT}
    volumes:
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - ../backend/foodgram:/app
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    image: evstigneefff/frontend
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.19.3
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - ../frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
    depends_on:
      - frontend

volumes:
  static_value:
  media_value:
  postgres_data:

